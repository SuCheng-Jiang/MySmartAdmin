spring:
  # 数据库连接信息
  datasource:
    url: jdbc:mysql://47.120.34.244:3306/smart_admin_v3?autoReconnect=true&useServerPreparedStmts=false&rewriteBatchedStatements=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true&serverTimezone=Asia/Shanghai
    username: root
    password: 1998519jsc
    #数据库连接池初始化连接数
    initial-size: 10
    #数据库连接池最小空闲连接
    min-idle: 10
    #数据库连接池最大连接数
    max-active: 100
    #数据库连接池最大等待时间
    max-wait: 60000
    #数据库连接池多长时间运行一次空闲连接回收
    time-between-eviction-runs-millis: 60000
    #数据库连接池中连接在多少毫秒可被释放
    min-evictable-idle-time-millis: 300000
    driver-class-name: com.mysql.cj.jdbc.Driver
    #使用Druid数据源时，需配置正确的过滤器，stat(用于统计监控)，wall(用于防御SQL注入)，log4j(用于日志记录)
    filters: stat
    druid:
      username: druid
      password: 1024lab
      # 是否启用Druid的WebStatFilter用于登录统计功能。设置为false表示不启用。
      login:
        enabled: false
      method:
        pointcut: net.lab1024.sa..*Service.*

  # redis 连接池配置信息
  redis:
    database: 1
    host: 47.120.34.244
    port: 6379
    password:
    timeout: 10000ms
    lettuce:
      pool:
        max-active: 100
        min-idle: 10
        max-idle: 50
        max-wait: 30000ms

  # 上传文件大小配置
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB

  jackson:
    # json序列化相关配置
    serialization:
      #启用后，将调用每个枚举常量的toString()方法来获取其JSON表示，而不是使用枚举常量的名称
      write-enums-using-to-string: true
      #用于控制日期和时间类型如何被序列化为JSON格式
      #当设置为true时，会将对象序列化为一个时间戳（即字1970.1.1以来的毫秒数）
      #当设置为false时，会使用更详细的日期时间格式（2023-01-01T00:00:00.000+0000）
      write-dates-as-timestamps: false
    # json反序列化相关配置
    deserialization:
      read-enums-using-to-string: true
      #如果设置为false，反序列化时将忽略位置属性而不是抛出异常，默认true
      fail-on-unknown-properties: false
    #用于指定哪些属性应该被序列化到JSON中，ALWAYS：所有属性都被序列化，无论他们的值是什么
    default-property-inclusion: always
    #指定反序列化的日期时间格式和时区
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  # 缓存实现类型
  cache:
    type: caffeine

# tomcat 配置，主要用于 配置 访问日志（便于将来排查错误）
server:
  tomcat:
    basedir: ${project.log-directory}/tomcat-logs
    accesslog:
      enabled: true
      max-days: 30
      pattern: "%t %{X-Forwarded-For}i %a %r %s (%D ms) %I (%B byte)"


# 文件上传 配置
file:
  storage:
    mode: local
    local:
      upload-path: D:/WorkSpace/IDEA/smart-admin-v3/home/smart_admin_v3/upload/   #文件上传目录
      url-prefix:
    cloud:
      region: oss-cn-qingdao
      endpoint: oss-cn-qingdao.aliyuncs.com
      bucket-name: common
      access-key:
      secret-key:
      url-prefix: https://${file.storage.cloud.bucket-name}.${file.storage.cloud.endpoint}/
      private-url-expire-seconds: 3600


# open api配置
springdoc:
  swagger-ui:
    enabled: true # 开关
    doc-expansion: none  #关闭展开
    tags-sorter: alpha
  api-docs:
    enabled: true # 开关
knife4j:
  enable: true
  basic:
    enable: true
    username: api # Basic认证用户名
    password: 1024 # Basic认证密码

# RestTemplate 请求配置
http:
  pool:
    max-total: 100
    connect-timeout: 50000
    read-timeout: 50000
    write-timeout: 50000
    keep-alive: 300000

# 跨域配置
access-control-allow-origin: 'smartadmin.vip'

# 心跳配置
heart-beat:
  interval-seconds: 60

# 热加载配置
reload:
  interval-seconds: 60

# sa-token 配置
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: x-access-token
  # token 有效期（单位：秒） 默认30天（2592000秒），-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）(jwt模式下恒false)
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）(jwt模式下无用)
  token-style: simple-uuid
  # 是否打开自动续签 （如果此值为true，框架会在每次直接或间接调用 getLoginId() 时进行一次过期检查与续签操作）
  auto-renew: true
  # 是否输出操作日志
  is-log: false
  # 日志等级（trace、debug、info、warn、error、fatal）
  log-level: warn
  # 启动时的字符画打印
  is-print: false
  # 是否从cookie读取token
  is-read-cookie: false